name: RPC Devnet
on: workflow_dispatch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js LTS
        uses: actions/setup-node@v2
        with:
          node-version: lts/*
          cache: 'npm'
      - run: npm ci
      # - run: npm run build --if-present
      - uses: actions/upload-artifact@v2
        with:
          name: build
          path: dist

  tests:
    strategy:
      max-parallel: 1 # needed until we get a seperate account for the rpc provider, until then running them in parallel would result in a nonce issue
      matrix:
        # name: [sequencer-test, sequencer-goerli, rpc-goerli]
        name: [sequencer-test, rpc-test]
        include:
          - name: sequencer-test
            TEST_PROVIDER_BASE_URL: http://127.0.0.1:5050/
          - name: rpc-test
            TEST_RPC_URL: http://127.0.0.1:5050/rpc
          # - name: sequencer-goerli
          #   TEST_PROVIDER_BASE_URL: https://alpha4-2.starknet.io
          #   ENABLE_TEST_ACCOUNT_PRIVATE_KEY: true
          #   ENABLE_TEST_ACCOUNT_ADDRESS: true
          # - name: rpc-goerli
          #   ENABLE_TEST_RPC_URL: true
          #   ENABLE_TEST_ACCOUNT_PRIVATE_KEY: true
          #   ENABLE_TEST_ACCOUNT_ADDRESS: true

    name: Run test on ${{ matrix.name }}
    runs-on: ubuntu-latest
    needs: [build]

    services:
      devnet:
        image: shardlabs/starknet-devnet:0.4.0-seed0
        ports:
          - 5050:5050
    env:
      TEST_PROVIDER_BASE_URL: ${{ matrix.TEST_PROVIDER_BASE_URL }}
      TEST_RPC_URL: ${{ matrix.TEST_RPC_URL || matrix.ENABLE_TEST_RPC_URL && secrets.TEST_RPC_URL }}
      TEST_ACCOUNT_PRIVATE_KEY: ${{ matrix.ENABLE_TEST_ACCOUNT_PRIVATE_KEY && secrets.TEST_ACCOUNT_PRIVATE_KEY }}
      TEST_ACCOUNT_ADDRESS: ${{ matrix.ENABLE_TEST_ACCOUNT_ADDRESS && secrets.TEST_ACCOUNT_ADDRESS }}

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js LTS
        uses: actions/setup-node@v2
        with:
          node-version: lts/*
          cache: 'npm'
      - run: npm ci
      - run: npm test

  # release:
  #   name: Release
  #   runs-on: ubuntu-latest
  #   needs: [build, tests]
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: actions/setup-node@v2
  #       with:
  #         node-version: lts/*
  #         cache: 'npm'
  #     - run: npm ci
  #     - uses: actions/download-artifact@v2
  #       with:
  #         name: build
  #     - env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #         NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
  #       run: npx semantic-release
